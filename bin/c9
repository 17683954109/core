#!/usr/bin/env node

// workaround for npm 3 breaking bundled dependencies
var Module = require("module");
if (Module.REPLACE_NODE_MODULE_PATH) {
    var path = require("path")
    var _resolveFilename_orig = Module._resolveFilename
    Module._resolveFilename = function(id, parent) {
        var root = path.join(__dirname, "/..");
        if (parent && parent.paths && parent.paths[0] && parent.paths[0].indexOf(root) == 0) {
            parent.paths = parent.paths.map(function(p) {
                if (p.indexOf(root) != 0) return
                p = p.slice(root.length);
                return root + p.replace(/([\\\/]|^)node_modules([\\\/]|$)/g, "$1n_m$2");
            }).filter(Boolean);
        }
        return _resolveFilename_orig.call(Module, id, parent);
    };
}

// Architect
var architect = require("architect");

// Add ability to load AMD modules
require("amd-loader");


architect.resolveConfig(require("../configs/cli.js")(),
  __dirname + "/../plugins", function (err, config) {
    if (err) throw err.message;

    var cli;
    var app = architect.createApp(config, function(err, app){
        if (err) throw err;

        cli.start();
    });
    app.on("service", function(name, plugin){
        if (name == "cli")
            cli = plugin;
        
        if (!plugin.name)
            plugin.name = name;
    });
});